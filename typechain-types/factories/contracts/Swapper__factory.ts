/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Swapper, SwapperInterface } from "../../contracts/Swapper";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "overrideSlippage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amt",
        type: "uint256",
      },
    ],
    name: "setSlippage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "slippage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "slippageOverrode",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "fromToken",
        type: "address",
      },
      {
        internalType: "contract IUniswapV2Pair",
        name: "pair",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    name: "swap",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600960015534801561001557600080fd5b5061001f33610024565b610074565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610d1a806100836000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063e19d32361161005b578063e19d3236146100e1578063f0fa55a914610114578063f2fde38b14610127578063f87c49381461013a57600080fd5b80633e032a3b1461008d578063715018a6146100a95780638da5cb5b146100b3578063df791e50146100ce575b600080fd5b61009660015481565b6040519081526020015b60405180910390f35b6100b161014d565b005b6000546040516001600160a01b0390911681526020016100a0565b6100966100dc366004610a30565b61018c565b6101046100ef366004610a71565b60026020526000908152604090205460ff1681565b60405190151581526020016100a0565b6100b1610122366004610a8e565b61056f565b6100b1610135366004610a71565b6105ee565b6100b1610148366004610a71565b610689565b6000546001600160a01b031633146101805760405162461bcd60e51b815260040161017790610aa7565b60405180910390fd5b61018a60006106dc565b565b60006001600160a01b0383166101e45760405162461bcd60e51b815260206004820152601760248201527f42726577556c783a2043616e6e6f7420636f6e766572740000000000000000006044820152606401610177565b600080846001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa158015610225573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102499190610af8565b506001600160701b031691506001600160701b031691506000856001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa1580156102a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102c49190610b48565b6001600160a01b0316876001600160a01b0316149050806102e65781836102e9565b82825b90935091506103036001600160a01b03881633888861072c565b6040516370a0823160e01b81526001600160a01b0387811660048301526103799185918a16906370a0823190602401602060405180830381865afa15801561034f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103739190610b65565b9061078c565b600154909550610389848761079f565b11806103ad57506001600160a01b03871660009081526002602052604090205460ff165b6103ed5760405162461bcd60e51b81526020600482015260116024820152700e6d8d2e0e0c2ceca40e8dede40d0d2ced607b1b6044820152606401610177565b600085116104485760405162461bcd60e51b815260206004820152602260248201527f42726577426f6f3a20494e53554646494349454e545f494e5055545f414d4f55604482015261139560f21b6064820152608401610177565b6000831180156104585750600082115b6104a45760405162461bcd60e51b815260206004820152601f60248201527f42726577556c783a20494e53554646494349454e545f4c4951554944495459006044820152606401610177565b6104b0856103e56107ab565b94506104c8856104c2856103e86107ab565b906107b7565b6104d286846107ab565b6104dc9190610b94565b9350806104eb578360006104ef565b6000845b6040805160008152602081019182905263022c0d9f60e01b90915291945092506001600160a01b0387169063022c0d9f906105339086908690339060248101610c0e565b600060405180830381600087803b15801561054d57600080fd5b505af1158015610561573d6000803e3d6000fd5b505050505050509392505050565b6000546001600160a01b031633146105995760405162461bcd60e51b815260040161017790610aa7565b601481106105e95760405162461bcd60e51b815260206004820152601960248201527f736c6970706167652073657474696e6720746f6f2068696768000000000000006044820152606401610177565b600155565b6000546001600160a01b031633146106185760405162461bcd60e51b815260040161017790610aa7565b6001600160a01b03811661067d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610177565b610686816106dc565b50565b6000546001600160a01b031633146106b35760405162461bcd60e51b815260040161017790610aa7565b6001600160a01b03166000908152600260205260409020805460ff19811660ff90911615179055565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b1790526107869085906107c3565b50505050565b60006107988284610c45565b9392505050565b60006107988284610b94565b60006107988284610c5c565b60006107988284610c7b565b6000610818826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661089a9092919063ffffffff16565b80519091501561089557808060200190518101906108369190610c93565b6108955760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610177565b505050565b60606108a984846000856108b1565b949350505050565b6060824710156109125760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610177565b6001600160a01b0385163b6109695760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610177565b600080866001600160a01b031685876040516109859190610cb5565b60006040518083038185875af1925050503d80600081146109c2576040519150601f19603f3d011682016040523d82523d6000602084013e6109c7565b606091505b50915091506109d78282866109e2565b979650505050505050565b606083156109f1575081610798565b825115610a015782518084602001fd5b8160405162461bcd60e51b81526004016101779190610cd1565b6001600160a01b038116811461068657600080fd5b600080600060608486031215610a4557600080fd5b8335610a5081610a1b565b92506020840135610a6081610a1b565b929592945050506040919091013590565b600060208284031215610a8357600080fd5b813561079881610a1b565b600060208284031215610aa057600080fd5b5035919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b80516001600160701b0381168114610af357600080fd5b919050565b600080600060608486031215610b0d57600080fd5b610b1684610adc565b9250610b2460208501610adc565b9150604084015163ffffffff81168114610b3d57600080fd5b809150509250925092565b600060208284031215610b5a57600080fd5b815161079881610a1b565b600060208284031215610b7757600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b600082610bb157634e487b7160e01b600052601260045260246000fd5b500490565b60005b83811015610bd1578181015183820152602001610bb9565b838111156107865750506000910152565b60008151808452610bfa816020860160208601610bb6565b601f01601f19169290920160200192915050565b84815283602082015260018060a01b0383166040820152608060608201526000610c3b6080830184610be2565b9695505050505050565b600082821015610c5757610c57610b7e565b500390565b6000816000190483118215151615610c7657610c76610b7e565b500290565b60008219821115610c8e57610c8e610b7e565b500190565b600060208284031215610ca557600080fd5b8151801515811461079857600080fd5b60008251610cc7818460208701610bb6565b9190910192915050565b6020815260006107986020830184610be256fea26469706673582212203492d7962dffb0f8348c7a126d727d8e9ef761760c6f460f5c1dc447d293e61864736f6c634300080d0033";

type SwapperConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SwapperConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Swapper__factory extends ContractFactory {
  constructor(...args: SwapperConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Swapper> {
    return super.deploy(overrides || {}) as Promise<Swapper>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Swapper {
    return super.attach(address) as Swapper;
  }
  override connect(signer: Signer): Swapper__factory {
    return super.connect(signer) as Swapper__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SwapperInterface {
    return new utils.Interface(_abi) as SwapperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Swapper {
    return new Contract(address, _abi, signerOrProvider) as Swapper;
  }
}
